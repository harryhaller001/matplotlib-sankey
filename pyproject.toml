[build-system]
build-backend = "flit_core.buildapi"
requires = ["flit-core>=3.4,<4"]

[project]
name = "matplotlib-sankey"
version = "0.1.0"
description = "Sankey plot for matplotlib"
readme = "README.md"
license = { file = "LICENSE" }
maintainers = [{ name = "harryhaller001", email = "harryhaller001@gmail.com" }]
authors = [{ name = "harryhaller001" }]
requires-python = ">=3.8"
classifiers = [
  "Development Status :: 3 - Alpha",
  "Framework :: Matplotlib",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: MIT License",
  "Natural Language :: English",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Typing :: Typed",
]
dependencies = ["matplotlib", "numpy"]

optional-dependencies.dev = [
  "coverage",
  "docutils>=0.8,!=0.18.*,!=0.19.*",
  "flit",
  "furo",
  "ipykernel",
  "ipython",
  "ipywidgets",
  "isort",
  "myst-parser",
  "nbsphinx",
  "pandoc",
  "pre-commit",
  "pytest",
  "setuptools",
  "sphinx>=4",
  "sphinx-autoapi",
  "sphinx-autodoc-typehints",
  "sphinx-book-theme>=1",
  "sphinx-copybutton",
  "sphinx-design",
  "sphinx-rtd-theme",
  "sphinx-tabs",
  "sphinxcontrib-bibtex>=1",
  "sphinxext-opengraph",
  "twine>=4.0.2",
  "mypy",
]
# https://docs.pypi.org/project_metadata/#project-urls
urls.Documentation = "https://github.com/harryhaller001/matplotlib-sankey"
urls.Homepage = "https://github.com/harryhaller001/matplotlib-sankey"
urls.Source = "https://github.com/harryhaller001/matplotlib-sankey"

[tool.flit.sdist]
exclude = ["docs/*", "test/*"]

[tool.ruff]
line-length = 120
# extend-include = ["*.ipynb"]

format.docstring-code-format = true

lint.select = [
  "B",      # flake8-bugbear
  "BLE",    # flake8-blind-except
  "C4",     # flake8-comprehensions
  "D",      # pydocstyle
  "E",      # Error detected by Pycodestyle
  "F",      # Errors detected by Pyflakes
  "I",      # isort
  "RUF100", # Report unused noqa directives
  "TID",    # flake8-tidy-imports
  "UP",     # pyupgrade
  "W",      # Warning detected by Pycodestyle
]
lint.ignore = [
  "I001",
  "B008", # Errors from function calls in argument defaults. These are fine when the result is immutable.
  "D100", # Missing docstring in public module
  "D104", # Missing docstring in public package
  "D105", # __magic__ methods are often self-explanatory, allow missing docstrings
  "D107", # Missing docstring in __init__
  # Disable one in each pair of mutually incompatible rules
  "D203", # We don’t want a blank line before a class docstring
  "D213", # <> We want docstrings to start immediately after the opening triple quote
  "D400", # first line should end with a period [Bug: doesn’t work with single-line docstrings]
  "D401", # First line should be in imperative mood; try rephrasing
  "E501", # line too long -> we accept long comment lines; formatter gets rid of long code lines
  "E731", # Do not assign a lambda expression, use a def -> lambda expression assignments are convenient
  "E741", # allow I, O, l as variable names -> I is the identity matrix
]


[tool.pytest.ini_options]
log_format = "%(asctime)s %(levelname)s %(message)s"
log_date_format = "%Y-%m-%d %H:%M:%S"
log_level = "WARN"
log_cli = "true"
testpaths = ["tests"]
xfail_strict = true
addopts = ["--import-mode=importlib"]

[tool.coverage.run]
source = ["matplotlib_sankey"]
omit = ["*/tests/*"]

[tool.coverage.report]
exclude_lines = ["raise"]
ignore_errors = true

[tool.coverage.html]
directory = "docs/coverage_report"
